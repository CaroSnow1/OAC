|implementacion
EDO_PST[0] <= practica06:secuenciador.Y[0]
EDO_PST[1] <= practica06:secuenciador.Y[1]
EDO_PST[2] <= practica06:secuenciador.Y[2]
EDO_PST[3] <= practica06:secuenciador.Y[3]
X => mux_inputs:Entradas.I0
Y => mux_inputs:Entradas.I1
INT => mux_inputs:Entradas.I2
CLK => div_frec:inst2.reloj
RESET => registro:Prueba.reset
RESET => registro_1:VF.reset
RESET => practica06:secuenciador.RESET
RESET => registro_12:R_Trans.reset
RESET => registro_12:LIGA.reset
RESET => registro_12:R_Interru.reset
RESET => registro:Instrucciones.reset
RESET => registro_outs:SALIDAS.reset
IN_1[0] => registro_12:R_Trans.data_in[0]
IN_1[0] => registro_12:R_Interru.data_in[0]
IN_1[1] => registro_12:R_Trans.data_in[1]
IN_1[1] => registro_12:R_Interru.data_in[1]
IN_1[2] => registro_12:R_Trans.data_in[2]
IN_1[2] => registro_12:R_Interru.data_in[2]
IN_1[3] => registro_12:R_Trans.data_in[3]
IN_1[3] => registro_12:R_Interru.data_in[3]
OUTS[0] <= registro_outs:SALIDAS.data_out[0]
OUTS[1] <= registro_outs:SALIDAS.data_out[1]
OUTS[2] <= registro_outs:SALIDAS.data_out[2]
OUTS[3] <= registro_outs:SALIDAS.data_out[3]
OUTS[4] <= registro_outs:SALIDAS.data_out[4]
OUTS[5] <= registro_outs:SALIDAS.data_out[5]


|implementacion|practica06:secuenciador
nPL <= logica_interna:IntLogic.npl
nCC => logica_interna:IntLogic.ncc
inst[0] => logica_interna:IntLogic.instruccion[0]
inst[1] => logica_interna:IntLogic.instruccion[1]
nMAP <= logica_interna:IntLogic.nmap
nVECT <= logica_interna:IntLogic.nvect
Y[0] <= mux_direccion:MuxDireccion.salida[0]
Y[1] <= mux_direccion:MuxDireccion.salida[1]
Y[2] <= mux_direccion:MuxDireccion.salida[2]
Y[3] <= mux_direccion:MuxDireccion.salida[3]
CLK => registro_12:MicroPC.clk
RESET => registro_12:MicroPC.reset
ENA => registro_12:MicroPC.ena
D[0] => mux_direccion:MuxDireccion.E1[0]
D[1] => mux_direccion:MuxDireccion.E1[1]
D[2] => mux_direccion:MuxDireccion.E1[2]
D[3] => mux_direccion:MuxDireccion.E1[3]


|implementacion|practica06:secuenciador|logica_interna:IntLogic
instruccion[0] => Equal0.IN1
instruccion[0] => Equal1.IN1
instruccion[0] => Equal2.IN0
instruccion[0] => Equal3.IN1
instruccion[1] => Equal0.IN0
instruccion[1] => Equal1.IN0
instruccion[1] => Equal2.IN1
instruccion[1] => Equal3.IN0
ncc => sel.DATAA
ncc => sel.DATAB
sel <= sel$latch.DB_MAX_OUTPUT_PORT_TYPE
npl <= npl$latch.DB_MAX_OUTPUT_PORT_TYPE
nmap <= nmap$latch.DB_MAX_OUTPUT_PORT_TYPE
nvect <= nvect$latch.DB_MAX_OUTPUT_PORT_TYPE


|implementacion|practica06:secuenciador|mux_direccion:MuxDireccion
sel => salida[0].OUTPUTSELECT
sel => salida[1].OUTPUTSELECT
sel => salida[2].OUTPUTSELECT
sel => salida[3].OUTPUTSELECT
E0[0] => salida[0].DATAB
E0[1] => salida[1].DATAB
E0[2] => salida[2].DATAB
E0[3] => salida[3].DATAB
E1[0] => salida[0].DATAA
E1[1] => salida[1].DATAA
E1[2] => salida[2].DATAA
E1[3] => salida[3].DATAA
salida[0] <= salida[0].DB_MAX_OUTPUT_PORT_TYPE
salida[1] <= salida[1].DB_MAX_OUTPUT_PORT_TYPE
salida[2] <= salida[2].DB_MAX_OUTPUT_PORT_TYPE
salida[3] <= salida[3].DB_MAX_OUTPUT_PORT_TYPE


|implementacion|practica06:secuenciador|registro_12:MicroPC
clk => internal_value[0].CLK
clk => internal_value[1].CLK
clk => internal_value[2].CLK
clk => internal_value[3].CLK
reset => internal_value[0].ACLR
reset => internal_value[1].ACLR
reset => internal_value[2].ACLR
reset => internal_value[3].ACLR
ena => data_out[3].OE
ena => data_out[2].OE
ena => data_out[1].OE
ena => data_out[0].OE
data_in[0] => internal_value[0].DATAIN
data_in[1] => internal_value[1].DATAIN
data_in[2] => internal_value[2].DATAIN
data_in[3] => internal_value[3].DATAIN
data_out[0] <= data_out[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3].DB_MAX_OUTPUT_PORT_TYPE


|implementacion|practica06:secuenciador|incrementador:Inc
entrada[0] => Add0.IN8
entrada[1] => Add0.IN7
entrada[2] => Add0.IN6
entrada[3] => Add0.IN5
salida[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
salida[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
salida[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
salida[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|implementacion|mux_inputs:Entradas
sel[0] => Equal0.IN1
sel[0] => Equal1.IN1
sel[0] => Equal2.IN0
sel[0] => Equal3.IN1
sel[1] => Equal0.IN0
sel[1] => Equal1.IN0
sel[1] => Equal2.IN1
sel[1] => Equal3.IN0
I0 => O.DATAB
I1 => O.DATAB
I2 => O.DATAB
I3 => O.DATAA
O <= O$latch.DB_MAX_OUTPUT_PORT_TYPE


|implementacion|registro:Prueba
clk => internal_value[0].CLK
clk => internal_value[1].CLK
reset => internal_value[0].ACLR
reset => internal_value[1].ACLR
ena => data_out[1].OE
ena => data_out[0].OE
data_in[0] => internal_value[0].DATAIN
data_in[1] => internal_value[1].DATAIN
data_out[0] <= data_out[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1].DB_MAX_OUTPUT_PORT_TYPE


|implementacion|div_frec:inst2
reloj => cuenta[0].CLK
reloj => cuenta[1].CLK
reloj => cuenta[2].CLK
reloj => cuenta[3].CLK
reloj => cuenta[4].CLK
reloj => cuenta[5].CLK
reloj => cuenta[6].CLK
reloj => cuenta[7].CLK
reloj => cuenta[8].CLK
reloj => cuenta[9].CLK
reloj => cuenta[10].CLK
reloj => cuenta[11].CLK
reloj => cuenta[12].CLK
reloj => cuenta[13].CLK
reloj => cuenta[14].CLK
reloj => cuenta[15].CLK
reloj => cuenta[16].CLK
reloj => cuenta[17].CLK
reloj => cuenta[18].CLK
reloj => cuenta[19].CLK
reloj => cuenta[20].CLK
reloj => cuenta[21].CLK
reloj => cuenta[22].CLK
reloj => cuenta[23].CLK
reloj => cuenta[24].CLK
reloj => cuenta[25].CLK
reloj => cuenta[26].CLK
reloj => cuenta[27].CLK
div_clk <= cuenta[27].DB_MAX_OUTPUT_PORT_TYPE


|implementacion|divisor_datos:div_data
entrada[0] => salidas[0].DATAIN
entrada[1] => salidas[1].DATAIN
entrada[2] => salidas[2].DATAIN
entrada[3] => salidas[3].DATAIN
entrada[4] => salidas[4].DATAIN
entrada[5] => salidas[5].DATAIN
entrada[6] => liga[0].DATAIN
entrada[7] => liga[1].DATAIN
entrada[8] => liga[2].DATAIN
entrada[9] => liga[3].DATAIN
entrada[10] => inst[0].DATAIN
entrada[11] => inst[1].DATAIN
entrada[12] => vf.DATAIN
entrada[13] => prueba[0].DATAIN
entrada[14] => prueba[1].DATAIN
liga[0] <= entrada[6].DB_MAX_OUTPUT_PORT_TYPE
liga[1] <= entrada[7].DB_MAX_OUTPUT_PORT_TYPE
liga[2] <= entrada[8].DB_MAX_OUTPUT_PORT_TYPE
liga[3] <= entrada[9].DB_MAX_OUTPUT_PORT_TYPE
inst[0] <= entrada[10].DB_MAX_OUTPUT_PORT_TYPE
inst[1] <= entrada[11].DB_MAX_OUTPUT_PORT_TYPE
prueba[0] <= entrada[13].DB_MAX_OUTPUT_PORT_TYPE
prueba[1] <= entrada[14].DB_MAX_OUTPUT_PORT_TYPE
vf <= entrada[12].DB_MAX_OUTPUT_PORT_TYPE
salidas[0] <= entrada[0].DB_MAX_OUTPUT_PORT_TYPE
salidas[1] <= entrada[1].DB_MAX_OUTPUT_PORT_TYPE
salidas[2] <= entrada[2].DB_MAX_OUTPUT_PORT_TYPE
salidas[3] <= entrada[3].DB_MAX_OUTPUT_PORT_TYPE
salidas[4] <= entrada[4].DB_MAX_OUTPUT_PORT_TYPE
salidas[5] <= entrada[5].DB_MAX_OUTPUT_PORT_TYPE


|implementacion|memory:inst
dir[0] => Mux0.IN19
dir[0] => Mux1.IN19
dir[0] => Mux2.IN19
dir[0] => Mux3.IN19
dir[0] => Mux4.IN19
dir[0] => Mux5.IN19
dir[0] => Mux6.IN19
dir[0] => Mux7.IN19
dir[0] => Mux8.IN19
dir[0] => Mux9.IN19
dir[0] => Mux10.IN19
dir[0] => Mux11.IN19
dir[0] => Mux12.IN19
dir[0] => Mux13.IN19
dir[0] => Mux14.IN19
dir[1] => Mux0.IN18
dir[1] => Mux1.IN18
dir[1] => Mux2.IN18
dir[1] => Mux3.IN18
dir[1] => Mux4.IN18
dir[1] => Mux5.IN18
dir[1] => Mux6.IN18
dir[1] => Mux7.IN18
dir[1] => Mux8.IN18
dir[1] => Mux9.IN18
dir[1] => Mux10.IN18
dir[1] => Mux11.IN18
dir[1] => Mux12.IN18
dir[1] => Mux13.IN18
dir[1] => Mux14.IN18
dir[2] => Mux0.IN17
dir[2] => Mux1.IN17
dir[2] => Mux2.IN17
dir[2] => Mux3.IN17
dir[2] => Mux4.IN17
dir[2] => Mux5.IN17
dir[2] => Mux6.IN17
dir[2] => Mux7.IN17
dir[2] => Mux8.IN17
dir[2] => Mux9.IN17
dir[2] => Mux10.IN17
dir[2] => Mux11.IN17
dir[2] => Mux12.IN17
dir[2] => Mux13.IN17
dir[2] => Mux14.IN17
dir[3] => Mux0.IN16
dir[3] => Mux1.IN16
dir[3] => Mux2.IN16
dir[3] => Mux3.IN16
dir[3] => Mux4.IN16
dir[3] => Mux5.IN16
dir[3] => Mux6.IN16
dir[3] => Mux7.IN16
dir[3] => Mux8.IN16
dir[3] => Mux9.IN16
dir[3] => Mux10.IN16
dir[3] => Mux11.IN16
dir[3] => Mux12.IN16
dir[3] => Mux13.IN16
dir[3] => Mux14.IN16
data[0] <= Mux14.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
data[8] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
data[9] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
data[10] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
data[11] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
data[12] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
data[13] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
data[14] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|implementacion|registro_1:VF
clk => internal_value.CLK
reset => internal_value.ACLR
ena => ~NO_FANOUT~
data_in => internal_value.DATAIN
data_out <= internal_value.DB_MAX_OUTPUT_PORT_TYPE


|implementacion|registro_12:R_Trans
clk => internal_value[0].CLK
clk => internal_value[1].CLK
clk => internal_value[2].CLK
clk => internal_value[3].CLK
reset => internal_value[0].ACLR
reset => internal_value[1].ACLR
reset => internal_value[2].ACLR
reset => internal_value[3].ACLR
ena => data_out[3].OE
ena => data_out[2].OE
ena => data_out[1].OE
ena => data_out[0].OE
data_in[0] => internal_value[0].DATAIN
data_in[1] => internal_value[1].DATAIN
data_in[2] => internal_value[2].DATAIN
data_in[3] => internal_value[3].DATAIN
data_out[0] <= data_out[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3].DB_MAX_OUTPUT_PORT_TYPE


|implementacion|registro_12:LIGA
clk => internal_value[0].CLK
clk => internal_value[1].CLK
clk => internal_value[2].CLK
clk => internal_value[3].CLK
reset => internal_value[0].ACLR
reset => internal_value[1].ACLR
reset => internal_value[2].ACLR
reset => internal_value[3].ACLR
ena => data_out[3].OE
ena => data_out[2].OE
ena => data_out[1].OE
ena => data_out[0].OE
data_in[0] => internal_value[0].DATAIN
data_in[1] => internal_value[1].DATAIN
data_in[2] => internal_value[2].DATAIN
data_in[3] => internal_value[3].DATAIN
data_out[0] <= data_out[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3].DB_MAX_OUTPUT_PORT_TYPE


|implementacion|registro_12:R_Interru
clk => internal_value[0].CLK
clk => internal_value[1].CLK
clk => internal_value[2].CLK
clk => internal_value[3].CLK
reset => internal_value[0].ACLR
reset => internal_value[1].ACLR
reset => internal_value[2].ACLR
reset => internal_value[3].ACLR
ena => data_out[3].OE
ena => data_out[2].OE
ena => data_out[1].OE
ena => data_out[0].OE
data_in[0] => internal_value[0].DATAIN
data_in[1] => internal_value[1].DATAIN
data_in[2] => internal_value[2].DATAIN
data_in[3] => internal_value[3].DATAIN
data_out[0] <= data_out[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3].DB_MAX_OUTPUT_PORT_TYPE


|implementacion|registro:Instrucciones
clk => internal_value[0].CLK
clk => internal_value[1].CLK
reset => internal_value[0].ACLR
reset => internal_value[1].ACLR
ena => data_out[1].OE
ena => data_out[0].OE
data_in[0] => internal_value[0].DATAIN
data_in[1] => internal_value[1].DATAIN
data_out[0] <= data_out[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1].DB_MAX_OUTPUT_PORT_TYPE


|implementacion|registro_outs:SALIDAS
clk => internal_value[0].CLK
clk => internal_value[1].CLK
clk => internal_value[2].CLK
clk => internal_value[3].CLK
clk => internal_value[4].CLK
clk => internal_value[5].CLK
reset => internal_value[0].ACLR
reset => internal_value[1].ACLR
reset => internal_value[2].ACLR
reset => internal_value[3].ACLR
reset => internal_value[4].ACLR
reset => internal_value[5].ACLR
ena => data_out[5].OE
ena => data_out[4].OE
ena => data_out[3].OE
ena => data_out[2].OE
ena => data_out[1].OE
ena => data_out[0].OE
data_in[0] => internal_value[0].DATAIN
data_in[1] => internal_value[1].DATAIN
data_in[2] => internal_value[2].DATAIN
data_in[3] => internal_value[3].DATAIN
data_in[4] => internal_value[4].DATAIN
data_in[5] => internal_value[5].DATAIN
data_out[0] <= data_out[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5].DB_MAX_OUTPUT_PORT_TYPE


