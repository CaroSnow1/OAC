-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, the Altera Quartus Prime License Agreement,
-- the Altera MegaCore Function License Agreement, or other 
-- applicable license agreement, including, without limitation, 
-- that your use is for the sole purpose of programming logic 
-- devices manufactured by Altera and sold by Altera or its 
-- authorized distributors.  Please refer to the applicable 
-- agreement for further details.

-- Quartus Prime generated Memory Initialization File (.mif)

WIDTH=8;
DEPTH=256;

ADDRESS_RADIX=UNS;
DATA_RADIX=HEX;

CONTENT BEGIN
	0    :   76; --LDAA EXT
	1    :   00; --RES
	2    :   FB; --RES b valor 1
	3    :   B6; --LDAB EXT
	4    :   00; --TEMP
	5    :   FC;--TEMP  a valor 2

	6    :   1A; --CMP si A<B hace el salto comparacion 1 y 2
	7    :   08; --JB EXT
	8    :   00; --SALTO
	9    :   10; --SALTA a 16
	10    :   76; --LDAA EXT si pasa aqui es porque B<A si B es menor asigna a A el siguiente en lista (No salto)
	11    :   00; -- siguiente en lista el 3
	12    :   FD; -- siguiente en lista el 3
	13    :   7E; --JMP para brincar LDAB
	14    :   00; -- 
	15    :   13; -- SALTA a dir 19
	16    :   B6; --LDAB EXT ya que A<B, si A es menor asigna a B el siguiente en lista (No salto)
	17    :   00; -- siguiente en lista el 3
	18    :   FD; -- siguiente en lista el 3

	19    :   1A; --CMP si A<B hace el salto comparacion con elemento 1 รณ 2 con 3
	20    :   08; --JB EXT
	21    :   00; --SALTO
	22    :   1D; --SALTA a 29
	23    :   76; --LDAA EXT si pasa aqui es porque B<A si B es menor asigna a A el siguiente en lista (No salto)
	24    :   00; -- siguiente en lista el 4
	25    :   FE; -- siguiente en lista el 4
	26    :   7E; --JMP para brincar LDAB
	27    :   00; -- 
	28    :   20; -- SALTA a dir 32
	29    :   B6; --LDAB EXT ya que A<B, si A es menor asigna a B el siguiente en lista (No salto)
	30    :   00; -- siguiente en lista el 4
	31    :   FE; -- siguiente en lista el 4

	32    :   1A; --CMP si A<B hace el salto comparacion con elemento 1,2 รณ 3 con 4
	33    :   08; --JB EXT
	34    :   00; --SALTO
	35    :   2A; --SALTA a 42
	36    :   76; --LDAA EXT si pasa aqui es porque B<A si B es menor asigna a A el siguiente en lista (No salto)
	37    :   00; -- siguiente en lista el 5
	38    :   FF; -- siguiente en lista el 5
	39    :   7E; --JMP para brincar LDAB
	40    :   00; -- 
	41    :   2D; -- SALTA a dir 45
	42    :   B6; --LDAB EXT ya que A<B, si A es menor asigna a B el siguiente en lista (No salto)
	43    :   00; -- siguiente en lista el 5
	44    :   FF; -- siguiente en lista el 5
	
	45    :   1A; --CMP si A<B hace el salto comparacion con elemento 1,2,3 รณ 4 con 5
	46    :   08; --JB EXT
	47    :   00; --SALTO
	48    :   3A; --SALTA a 58
	49    :	  B1; --Carga el valor de B
	50    :   7E; --JMP para brincar
	51    :   00; -- 
	52    :   3D; -- SALTA a dir 61
	53    :   A1; --Carga el valor de A
	[54..250]  :   00;

		      --VALORES EXTERNOS
	251    :   1;
	252    :   6;
	253    :   4;
	254    :   8;
	255    :   5;
	
END;
